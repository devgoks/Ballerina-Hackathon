{"projectName":"problem_2_1","totalTests":1,"passed":1,"failed":0,"skipped":0,"coveredLines":6,"missedLines":1,"coveragePercentage":85.71,"moduleStatus":[{"name":"problem_2_1","totalTests":1,"passed":1,"failed":0,"skipped":0,"tests":[{"name":"addEmployeeTest#\u0027Test1\u0027","status":"PASSED"}]}],"moduleCoverage":[{"name":"problem_2_1","coveredLines":6,"missedLines":1,"coveragePercentage":85.71,"sourceFiles":[{"name":"main.bal","coveredLines":[7,8,9,10,11,15],"missedLines":[13],"coveragePercentage":85.71,"sourceCode":"\nimport ballerinax/java.jdbc;\nimport ballerina/sql;\n\nfunction addEmployee(string dbFilePath, string name, string city, string department, int age) returns int {\n    do {\n        string db \u003d \"jdbc:h2:file:\".concat(dbFilePath);\n        jdbc:Client dbClient \u003d check  new (db, \"root\", \"root\");\n\t    sql:ExecutionResult result \u003d check dbClient-\u003eexecute(`INSERT INTO Employee \n        (name, city, department, age) VALUES (${name}, ${city}, ${department}, ${age})`);\n        return \u003cint\u003eresult.lastInsertId;\n    } on fail {\n    \treturn -1;\n    }\n}\n\n\n"}]}]}